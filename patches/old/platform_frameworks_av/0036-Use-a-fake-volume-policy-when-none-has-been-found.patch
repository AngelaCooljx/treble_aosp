From f056028603de7ba657abca9e8dc054eaffc0ba5f Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Sun, 28 Mar 2021 14:48:49 +0200
Subject: [PATCH 36/40] Use a fake volume policy when none has been found

This is useful, because on Samsung devices, the "real"
(=non-gsi-cheating) audio policy doesn't have any volume policy.

This requires actually adding the fake audio policy xml file (done in
device/phh/treble)
---
 services/audiopolicy/engine/config/src/EngineConfig.cpp | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/services/audiopolicy/engine/config/src/EngineConfig.cpp b/services/audiopolicy/engine/config/src/EngineConfig.cpp
index 4842cb282f..e8d6917754 100644
--- a/services/audiopolicy/engine/config/src/EngineConfig.cpp
+++ b/services/audiopolicy/engine/config/src/EngineConfig.cpp
@@ -712,13 +712,11 @@ android::status_t parseLegacyVolumeFile(const char* path, VolumeGroups &volumeGr
 }

 android::status_t parseLegacyVolumes(VolumeGroups &volumeGroups) {
-    if (std::string audioPolicyXmlConfigFile = audio_get_audio_policy_config_file();
-            !audioPolicyXmlConfigFile.empty()) {
-        return parseLegacyVolumeFile(audioPolicyXmlConfigFile.c_str(), volumeGroups);
-    } else {
-        ALOGE("No readable audio policy config file found");
-        return BAD_VALUE;
+    std::string audioPolicyXmlConfigFile = audio_get_audio_policy_config_file();
+    if (audioPolicyXmlConfigFile.empty()) {
+        audioPolicyXmlConfigFile = "/system/etc/fake_audio_policy_volume.xml";
     }
+    return parseLegacyVolumeFile(audioPolicyXmlConfigFile.c_str(), volumeGroups);
 }

 } // namespace engineConfig
-- 
2.25.1

