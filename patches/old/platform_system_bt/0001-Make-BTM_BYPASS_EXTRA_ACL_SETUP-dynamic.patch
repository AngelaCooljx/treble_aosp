From b925640c4098e093d69e13af2c9d38b967459b3b Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Tue, 20 Feb 2018 23:04:50 +0100
Subject: [PATCH 1/6] Make BTM_BYPASS_EXTRA_ACL_SETUP dynamic

Change-Id: Icb0868566b29b053ed7e83c9fd32e225af3f2e46
---
 hci/include/bt_hci_bdroid.h  |  3 +++
 internal_include/bt_target.h |  3 +++
 stack/acl/btm_acl.cc         | 20 ++++++++++----------
 stack/btm/btm_sec.cc         | 18 +++++++++---------
 4 files changed, 25 insertions(+), 19 deletions(-)

diff --git a/hci/include/bt_hci_bdroid.h b/hci/include/bt_hci_bdroid.h
index 6b3969ebb..a096acdd3 100644
--- a/hci/include/bt_hci_bdroid.h
+++ b/hci/include/bt_hci_bdroid.h
@@ -32,6 +32,9 @@
 #ifdef HAS_BDROID_BUILDCFG
 #include "bdroid_buildcfg.h"
 #endif
+#ifndef BTM_BYPASS_EXTRA_ACL_SETUP
+#define BTM_BYPASS_EXTRA_ACL_SETUP TRUE
+#endif
 
 /******************************************************************************
  *  Constants & Macros
diff --git a/internal_include/bt_target.h b/internal_include/bt_target.h
index 12f04d46a..fcd58667d 100644
--- a/internal_include/bt_target.h
+++ b/internal_include/bt_target.h
@@ -32,6 +32,9 @@
 #ifdef HAS_BDROID_BUILDCFG
 #include "bdroid_buildcfg.h"
 #endif
+#ifndef BTM_BYPASS_EXTRA_ACL_SETUP
+#define BTM_BYPASS_EXTRA_ACL_SETUP TRUE
+#endif
 
 #include "bt_types.h" /* This must be defined AFTER buildcfg.h */
 
diff --git a/stack/acl/btm_acl.cc b/stack/acl/btm_acl.cc
index 62a69870a..457718fcc 100644
--- a/stack/acl/btm_acl.cc
+++ b/stack/acl/btm_acl.cc
@@ -1089,19 +1089,21 @@ void btm_read_remote_ext_features_failed(uint8_t status, uint16_t handle) {
 void StackAclBtmAcl::btm_establish_continue(tACL_CONN* p_acl) {
   CHECK(p_acl != nullptr);
 
-  if (p_acl->is_transport_br_edr()) {
-    /* For now there are a some devices that do not like sending */
-    /* commands events and data at the same time. */
-    /* Set the packet types to the default allowed by the device */
-    const uint16_t default_packet_type_mask =
-        btm_cb.acl_cb_.DefaultPacketTypes();
-    if (!internal_.change_connection_packet_types(*p_acl,
-                                                  default_packet_type_mask)) {
-      LOG_ERROR("Unable to change connection packet type types:%04x address:%s",
-                default_packet_type_mask,
-                PRIVATE_ADDRESS(p_acl->RemoteAddress()));
+  if (!BTM_BYPASS_EXTRA_ACL_SETUP) {
+    if (p_acl->is_transport_br_edr()) {
+      /* For now there are a some devices that do not like sending */
+      /* commands events and data at the same time. */
+      /* Set the packet types to the default allowed by the device */
+      const uint16_t default_packet_type_mask =
+          btm_cb.acl_cb_.DefaultPacketTypes();
+      if (!internal_.change_connection_packet_types(*p_acl,
+                                                    default_packet_type_mask)) {
+        LOG_ERROR("Unable to change connection packet type types:%04x address:%s",
+                  default_packet_type_mask,
+                  PRIVATE_ADDRESS(p_acl->RemoteAddress()));
+      }
+      btm_set_link_policy(p_acl, btm_cb.acl_cb_.DefaultLinkPolicy());
     }
-    btm_set_link_policy(p_acl, btm_cb.acl_cb_.DefaultLinkPolicy());
   }
   NotifyAclLinkUp(*p_acl);
 }
diff --git a/stack/btm/btm_sec.cc b/stack/btm/btm_sec.cc
index 50bd604b0..e5dfcc87b 100644
--- a/stack/btm/btm_sec.cc
+++ b/stack/btm/btm_sec.cc
@@ -3620,10 +3620,12 @@ void btm_sec_connected(const RawAddress& bda, uint16_t handle,
   /* set paging flag up */
   /* whatever is in btm_establish_continue() without reporting the
    * BTM_BL_CONN_EVT event */
-  /* For now there are a some devices that do not like sending */
-  /* commands events and data at the same time. */
-  /* Set the packet types to the default allowed by the device */
-  btm_set_packet_types_from_address(bda, acl_get_supported_packet_types());
+  if(!BTM_BYPASS_EXTRA_ACL_SETUP) {
+    /* For now there are a some devices that do not like sending */
+    /* commands events and data at the same time. */
+    /* Set the packet types to the default allowed by the device */
+    btm_set_packet_types_from_address(bda, acl_get_supported_packet_types());
+  }
 
   /* Initialize security flags.  We need to do that because some            */
   /* authorization complete could have come after the connection is dropped */
-- 
2.25.1

